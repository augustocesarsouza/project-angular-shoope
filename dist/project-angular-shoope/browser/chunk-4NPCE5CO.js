import{a as c}from"./chunk-LGUYQTW7.js";import{h as a,l as o,o as n,r as h,va as i,wa as d}from"./chunk-WSRKUFRV.js";var y=(()=>{class r{constructor(e){this._http=e,this.baseUrl=c.BASE_URL||"/api"}findByIdOnly(e,t){let s=new i({"Content-Type":"application/json",Authorization:`Bearer ${t}`,uid:e});return this._http.get(`${this.baseUrl}/user/find-by-id-to-address/${e}`,{headers:s}).pipe(o(1))}login(e,t){return this._http.get(`${this.baseUrl}/public/user/login/${e}/${t}`).pipe(o(1))}verifyPassword(e,t){return this._http.get(`${this.baseUrl}/public/user/verify-password/${e}/${t}`).pipe(o(1))}createAccount(e){let s={headers:new i({"Content-Type":"application/json"})};return this._http.post(`${this.baseUrl}/public/user/create`,e,s).pipe(o(1))}updateUserPassword(e){let s={headers:new i({"Content-Type":"application/json"})};return this._http.put(`${this.baseUrl}/public/user/update-user-password`,e,s).pipe(o(1))}verifyCodeUser(e){let s={headers:new i({"Content-Type":"application/json"})};return this._http.post(`${this.baseUrl}/public/user/verify`,e,s).pipe(o(1))}updateUserAll(e){let s={headers:new i({"Content-Type":"application/json"})};return this._http.put(`${this.baseUrl}/public/user/update-all-info`,e,s).pipe(o(1))}updateEmailUser(e,t,s){let p={headers:new i({"Content-Type":"application/json",Authorization:`Bearer ${s}`,uid:t})};return this._http.post(`${this.baseUrl}/user/confirm-email-send-code`,e,p).pipe(o(1))}sendCodePhone(e){let s={headers:new i({"Content-Type":"application/json"})};return this._http.post(`${this.baseUrl}/public/user/send-code-phone`,e,s).pipe(o(1))}updateCpfAndBirthDayUser(e,t,s){let p={headers:new i({"Content-Type":"application/json",Authorization:`Bearer ${s}`,uid:t})};return this._http.put(`${this.baseUrl}/user/update-cpf-and-birthday-user`,e,p).pipe(o(1))}static{this.\u0275fac=function(t){return new(t||r)(h(d))}}static{this.\u0275prov=n({token:r,factory:r.\u0275fac,providedIn:"root"})}}return r})();var U=(()=>{class r{constructor(){this.objCode=new a({}),this.objCode$=this.objCode.asObservable()}updateobjCode(e){this.objCode.next(e)}get currentObjCode(){return this.objCode.getValue()}static{this.\u0275fac=function(t){return new(t||r)}}static{this.\u0275prov=n({token:r,factory:r.\u0275fac,providedIn:"root"})}}return r})();export{y as a,U as b};
